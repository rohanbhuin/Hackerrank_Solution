#include <bits/stdc++.h>

using namespace std;

// Complete the minimumNumber function below.
int minimumNumber(int n, string p) {
    // Return the minimum number of characters to make the password strong
    string special_characters = "!@#$%^&*()-+";
    int count=0;
    bool hasLower = false, hasUpper = false, hasDigit = false, specialChar = false;
    for (int i=0;i<n;i++){
        if(isdigit(p[i])){
            hasDigit=true;
        }        
        else if(islower(p[i])){
            hasLower=true;
        }
        else if(isupper(p[i])){
            hasUpper=true;
        }
        else if(special_characters.find(p[i])!=string::npos){
            specialChar=true;
        }
    }
    if(!hasDigit)
        count++;
    if(!hasLower)
        count++;
    if(!hasUpper)
        count++;
    if(!specialChar)
        count++;
    if (n+count<6)
        return (6-n);
    else 
        return count;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    string password;
    getline(cin, password);

    int answer = minimumNumber(n, password);

    fout << answer << "\n";

    fout.close();

    return 0;
}
